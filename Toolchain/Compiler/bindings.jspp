"#pragma no_parse;";

////////////////////////////////////////////////////////////////////////////////////////////////////
var global		= this;
var engine		= null;
var gl			= null;

////////////////////////////////////////////////////////////////////////////////////////////////////
var __native						= false;
var __touchEvents					= false;
var __webAudio						= false;
var __iOS							= false;
var ____debugger_current_scene		= null;
var ____debugger_current_clip		= [];

////////////////////////////////////////////////////////////////////////////////////////////////////
(function(global)
{
	// ==================================================================================================================================
	//	   ______                 ____  __
	//	  / ____/___  _________  / __ \/ /___ ___  _____  _____
	//	 / /   / __ \/ ___/ __ \/ /_/ / / __ `/ / / / _ \/ ___/
	//	/ /___/ /_/ / /__/ /_/ / ____/ / /_/ / /_/ /  __/ /
	//	\____/\____/\___/\____/_/   /_/\__,_/\__, /\___/_/
	//	                                    /____/
	// ==================================================================================================================================

	global.__native = false;
	global.__touchEvents = false;
	global.__iOS = false;

	global.State = function() {};

	if(!global.window)
	{
		global.window = new HTMLWindow();
		global.__native = true;
	}

	if(!global.document)
	{
		global.document = window.document;
	}

	if(!global.navigator)
	{
		global.navigator = window.navigator;
	}

	window['engine'] = global.engine;
	window['gl'] = global.gl;

	global.__webAudio = (window.AudioContext!=null || window.webkitAudioContext!=null);
	global.AudioContext = window.AudioContext || window.webkitAudioContext;

	// ==================================================================================================================================
	//	    ___          _                 __  _                ____       __                                   _____                              __
	//	   /   |  ____  (_)___ ___  ____ _/ /_(_)___  ____     / __ \___  / /_  __  ______ _____ ____  _____   / ___/__  ______  ____  ____  _____/ /_
	//	  / /| | / __ \/ / __ `__ \/ __ `/ __/ / __ \/ __ \   / / / / _ \/ __ \/ / / / __ `/ __ `/ _ \/ ___/   \__ \/ / / / __ \/ __ \/ __ \/ ___/ __/
	//	 / ___ |/ / / / / / / / / / /_/ / /_/ / /_/ / / / /  / /_/ /  __/ /_/ / /_/ / /_/ / /_/ /  __/ /      ___/ / /_/ / /_/ / /_/ / /_/ / /  / /_
	//	/_/  |_/_/ /_/_/_/ /_/ /_/\__,_/\__/_/\____/_/ /_/  /_____/\___/_.___/\__,_/\__, /\__, /\___/_/      /____/\__,_/ .___/ .___/\____/_/   \__/
	//	                                                                           /____//____/                        /_/   /_/
	// ==================================================================================================================================

	if (!global.__cococlip_debugger_paint) global.__cococlip_debugger_paint = function(p){}
	if (!global.__cococlip_debugger_tick) global.__cococlip_debugger_tick = function(p){}
	if (!global.__cococlip_debugger_interpolation) global.__cococlip_debugger_interpolation = function(p){}
	if (!global.__cococlip_debugger_keyframe) global.__cococlip_debugger_keyframe = function(p,f){}

	// ==================================================================================================================================
	//	  ______                        ___        __
	//	 /_  __/________ _________     ( _ )      / /   ____  ____ _
	//	  / / / ___/ __ `/ ___/ _ \   / __ \/|   / /   / __ \/ __ `/
	//	 / / / /  / /_/ / /__/  __/  / /_/  <   / /___/ /_/ / /_/ /
	//	/_/ /_/   \__,_/\___/\___/   \____/\/  /_____/\____/\__, /
	//	                                                   /____/
	// ==================================================================================================================================

	////////////////////////////////////////////////////////////////////////////////////////////////////
	if (!global.trace) global.trace = function (msg, style)
	{
		if(global['__minified__']) return;

		if(msg.indexOf("ERROR:")!=-1)
			console.log("%c" + msg, "color: #ff0000");
		else if(style)
			console.log(msg, style);
		else
			console.log(msg);

		if(engine && engine.device && engine.device.isHTML5Browser && engine.device.DEBUG_HOST)
		{
			try
			{
				var URL = "http://" + engine.device.DEBUG_HOST  +"/__trace";
				var xhttp = new XMLHttpRequest();
				xhttp.open("POST", URL, true);
				xhttp.setRequestHeader("Content-Type", "text/plain; charset=UTF-8");
				xhttp.send(msg);
			}
			catch(e)
			{
			}
		}
	};

	if(!global.write) global.write = function(file, buff) {}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	if (!global.console)
	{
		global.console = { log: global.trace };
	}

	// ==================================================================================================================================
	//	    ______________  ______       ___
	//	   / ____/ ____/  |/  /   |     /   |  ______________ ___  __
	//	  / __/ / /   / /|_/ / /| |    / /| | / ___/ ___/ __ `/ / / /
	//	 / /___/ /___/ /  / / ___ |   / ___ |/ /  / /  / /_/ / /_/ /
	//	/_____/\____/_/  /_/_/  |_|  /_/  |_/_/  /_/   \__,_/\__, /
	//	                                                    /____/
	// ==================================================================================================================================	});

	////////////////////////////////////////////////////////////////////////////////////////////////////
	if(!Array.prototype.size)
	Object.defineProperty(Array.prototype, "size", {
		value: function ()
		{
			return this.length;
		}
	});

	////////////////////////////////////////////////////////////////////////////////////////////////////
	if(!Array.prototype.clear)
	Object.defineProperty(Array.prototype, "clear", {
		value: function ()
		{
			while (this.length)
			{
				this.pop();
			}
		}
	});

	////////////////////////////////////////////////////////////////////////////////////////////////////
	if(!Array.prototype.clone)
	Object.defineProperty(Array.prototype, "clone", {
		value: function ()
		{
			return [].concat(this);
		}
	});

	if(!Array.prototype.sum)
	Object.defineProperty(Array.prototype, "sum", {
		value: function ()
		{
			return this.reduce(function(a, b) { return a + b; });
		}
	});

	// ==================================================================================================================================
	//	    ______________  ______       _____ __       _
	//	   / ____/ ____/  |/  /   |     / ___// /______(_)___  ____ _
	//	  / __/ / /   / /|_/ / /| |     \__ \/ __/ ___/ / __ \/ __ `/
	//	 / /___/ /___/ /  / / ___ |    ___/ / /_/ /  / / / / / /_/ /
	//	/_____/\____/_/  /_/_/  |_|   /____/\__/_/  /_/_/ /_/\__, /
	//	                                                    /____/
	// ==================================================================================================================================

	////////////////////////////////////////////////////////////////////////////////////////////////////
	if(!String.prototype.size)
	Object.defineProperty(String.prototype, "size", {
		value: function ()
		{
			return this.length;
		}
	});

	// ==================================================================================================================================
	//	    __  __________  _____       ____
	//	   / / / /_  __/  |/  / /      /  _/___ ___  ____ _____ ____
	//	  / /_/ / / / / /|_/ / /       / // __ `__ \/ __ `/ __ `/ _ \
	//	 / __  / / / / /  / / /___   _/ // / / / / / /_/ / /_/ /  __/
	//	/_/ /_/ /_/ /_/  /_/_____/  /___/_/ /_/ /_/\__,_/\__, /\___/
	//	                                                /____/
	// ==================================================================================================================================

	if(!Image.prototype.load)
	Object.defineProperty(Image.prototype, "load", {

		value: function (url, cocoimage)
		{
			this.__src = url;

			this.onerror = function (e)
			{
				this.__failed_to_download = this.__failed_to_download ? this.__failed_to_download + 1 : 1;

				if (this.__failed_to_download == 3)
				{
					trace("ERROR: image failed to download: " + this.__src);
					alert("Image keeps failing to download: " + this.__src);
				}

				if(!cocoimage || (cocoimage && cocoimage.__error(this)))
				{
					this.src = this.__src;
				}
			};

			this.onload = function (e)
			{
				if (cocoimage)
					cocoimage.__loaded(this);
			};

			this.src = url;
		}
	});

	// ==================================================================================================================================
	//	    __  __________  _____    ______                            ________                          __
	//	   / / / /_  __/  |/  / /   / ____/___ _____ _   ______ ______/ ____/ /__  ____ ___  ___  ____  / /_
	//	  / /_/ / / / / /|_/ / /   / /   / __ `/ __ \ | / / __ `/ ___/ __/ / / _ \/ __ `__ \/ _ \/ __ \/ __/
	//	 / __  / / / / /  / / /___/ /___/ /_/ / / / / |/ / /_/ (__  ) /___/ /  __/ / / / / /  __/ / / / /_
	//	/_/ /_/ /_/ /_/  /_/_____/\____/\__,_/_/ /_/|___/\__,_/____/_____/_/\___/_/ /_/ /_/\___/_/ /_/\__/
	//
	// ==================================================================================================================================

	////////////////////////////////////////////////////////////////////////////////////////////////////
	if(!HTMLCanvasElement.prototype.getImage)
	Object.defineProperty(HTMLCanvasElement.prototype, "getImage", {
		value: function ()
		{
			var img = new Image();
			img.src = this.toDataURL();
			return img;
		}
	});

	// ==================================================================================================================================
	//	    __  __________  _____       _       ___           __
	//	   / / / /_  __/  |/  / /      | |     / (_)___  ____/ /___ _      __
	//	  / /_/ / / / / /|_/ / /       | | /| / / / __ \/ __  / __ \ | /| / /
	//	 / __  / / / / /  / / /___     | |/ |/ / / / / / /_/ / /_/ / |/ |/ /
	//	/_/ /_/ /_/ /_/  /_/_____/     |__/|__/_/_/ /_/\__,_/\____/|__/|__/
	//
	// ==================================================================================================================================

	////////////////////////////////////////////////////////////////////////////////////////////////////
	if(!window.hasOwnProperty("deviceRotation"))
	{
		window.deviceRotation = 0;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	if (navigator && navigator.userAgent && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent))
	{
		global.__touchEvents = true;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	if (navigator && navigator.userAgent && /iPhone|iPad|iPod/i.test(navigator.userAgent))
	{
		global.__iOS = true;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	if (!window.requestAnimationFrame)
	{
		window.requestAnimationFrame = window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame ||
		function (callback)
		{
			window.setTimeout(callback, 1000.0 / 60.0);
		};
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	if (!window.now)
	{
		if(performance && performance.now)
			window.now = function() { return performance.now(); };
		else
			window.now = function() { return Date.now; };
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	global.__requestFullScreen = function()
	{
		if( window.innerHeight == screen.height)
			return;

		console.log("Entering Full Screen");

		var el = document.documentElement;

		if (el.requestFullscreen)
		{
			el.requestFullscreen();
		}
		else if (el.webkitRequestFullScreen)
		{
			el.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);
		}
		else if (el.mozrequestFullscreen)
		{
			el.mozrequestFullscreen();
		}
		else if (el.msrequestFullscreen)
		{
			el.msrequestFullscreen();
		}
	};

	// ==================================================================================================================================
	//	    ______                 __ ______                      __
	//	   / ____/   _____  ____  / //_  __/___ __________ ____  / /_
	//	  / __/ | | / / _ \/ __ \/ __// / / __ `/ ___/ __ `/ _ \/ __/
	//	 / /___ | |/ /  __/ / / / /_ / / / /_/ / /  / /_/ /  __/ /_
	//	/_____/ |___/\___/_/ /_/\__//_/  \__,_/_/   \__, /\___/\__/
	//	                                           /____/
	// ==================================================================================================================================

	if (global["EventTarget"]) global.EventTarget = function() {};

	global.EventTarget = function () {};

	/////////////////////////////////////////////////////////////////////////////////////
	global.__cancelEvent = function(e)
	{
		if(e==null && window && window.event)
			e = window.event;

		if(e && !e.__cancelled)
		{
			e.preventDefault();
			e.stopPropagation();
			e.cancelBubble=true;
			e.returnValue=false;
			e.__cancelled = true;
		}

		return false;
	};

	// ==================================================================================================================================
	//	 _       __     __    ________    ____                 __          _             ______            __            __     ____        __      _____ ____
	//	| |     / /__  / /_  / ____/ /   / __ \___  ____  ____/ /__  _____(_)___  ____ _/ ____/___  ____  / /____  _  __/ /_   / __ \____  / /_  __/ __(_) / /
	//	| | /| / / _ \/ __ \/ / __/ /   / /_/ / _ \/ __ \/ __  / _ \/ ___/ / __ \/ __ `/ /   / __ \/ __ \/ __/ _ \| |/_/ __/  / /_/ / __ \/ / / / / /_/ / / /
	//	| |/ |/ /  __/ /_/ / /_/ / /___/ _, _/  __/ / / / /_/ /  __/ /  / / / / / /_/ / /___/ /_/ / / / / /_/  __/>  </ /_   / ____/ /_/ / / /_/ / __/ / / /
	//	|__/|__/\___/_.___/\____/_____/_/ |_|\___/_/ /_/\__,_/\___/_/  /_/_/ /_/\__, /\____/\____/_/ /_/\__/\___/_/|_|\__/  /_/    \____/_/\__, /_/ /_/_/_/
	//	                                                                       /____/                                                     /____/
	// ==================================================================================================================================

	////////////////////////////////////////////////////////////////////////////////////////////////////
	if(global['WebGLRenderingContext'])
	{
		if(WebGLRenderingContext && !WebGLRenderingContext.BGRA)
		{
			WebGLRenderingContext.prototype.BGRA = WebGLRenderingContext.RGBA;
		}

		////////////////////////////////////////////////////////////////////////////////////////////////////
		WebGLRenderingContext.prototype.getShaderParameter_enum = function (shader, pname)
		{
			return this.getShaderParameter(shader, pname);
		}

		////////////////////////////////////////////////////////////////////////////////////////////////////
		WebGLRenderingContext.prototype.getShaderParameter_boolean = function (shader, pname)
		{
			return this.getShaderParameter(shader, pname);
		}
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	if(global['CanvasRenderingContext2D'])
	{
		Object.defineProperty(CanvasRenderingContext2D.prototype, "setFillStyleGradient",
		{
			value: function(grad)
			{
				this.fillStyle = grad;
			}
		});
	}

	// ==================================================================================================================================
	//	   __  ____  _ ___ __           ______                 __  _
	//	  / / / / /_(_) (_) /___  __   / ____/_  ______  _____/ /_(_)___  ____  _____
	//	 / / / / __/ / / / __/ / / /  / /_  / / / / __ \/ ___/ __/ / __ \/ __ \/ ___/
	//	/ /_/ / /_/ / / / /_/ /_/ /  / __/ / /_/ / / / / /__/ /_/ / /_/ / / / (__  )
	//	\____/\__/_/_/_/\__/\__, /  /_/    \__,_/_/ /_/\___/\__/_/\____/_/ /_/____/
	//	                   /____/
	// ==================================================================================================================================

	////////////////////////////////////////////////////////////////////////////////////////////////////
	global.COCO_SET_BY_NAME = function(obj, propName, value)
	{
		obj[propName] = value;
	};

	////////////////////////////////////////////////////////////////////////////////////////////////////
	global.COCO_GET_BY_NAME = function(obj, propName)
	{
		return obj[propName];
	};

	////////////////////////////////////////////////////////////////////////////////////////////////////
	global.parseTime = function(s)
	{
		return parseFloat(s);
	};

	////////////////////////////////////////////////////////////////////////////////////////////////////
	global.fixTouch = function(touch)
	{
		if (!global.__touchEvents) return;

		var winPageX = window.pageXOffset,
			winPageY = window.pageYOffset,
			x = touch.clientX,
			y = touch.clientY;

		if (touch.pageY === 0 && Math.floor(y) > Math.floor(touch.pageY) || touch.pageX === 0 && Math.floor(x) > Math.floor(touch.pageX))
		{
			// iOS4 clientX/clientY have the value that should have been
			// in pageX/pageY. While pageX/page/ have the value 0
			x = x - winPageX;
			y = y - winPageY;
		}
		else if (y < (touch.pageY - winPageY) || x < (touch.pageX - winPageX))
		{
			// Some Android browsers have totally bogus values for clientX/Y
			// when scrolling/zooming a page. Detectable since clientX/clientY
			// should never be smaller than pageX/pageY minus page scroll
			x = touch.pageX - winPageX;
			y = touch.pageY - winPageY;
		}

		touch.clientX = x;
		touch.clientY = y;
	};

	////////////////////////////////////////////////////////////////////////////////////////////////////
	global.__delete__ = function(o,a)
	{
		if(!o) return;

		if(a)
		{
			for(var i=o.length;i--;)
			{
				o[i] = __delete__(o[i]);
			}
		}

		if(o.hasOwnProperty('Destructor') || ('Destructor' in o))
		{
			o.Destructor();
		}

		delete o;
		o=null;

		return null;
	};

	window['__delete__'] = global.__delete__;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	global.GUID = function()
	{
	    var d = Date.now();
	    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c)
	    {
	        var r = (d + Math.random()*16)%16 | 0;
	        d = Math.floor(d/16);
	        return (c=='x' ? r : (r&0x3|0x8)).toString(16);
	    });
	    return uuid;
	};

	////////////////////////////////////////////////////////////////////////////////////////////////////
	global.formatCurrencyCache = {};
	global.formatCurrency = function(number, decimal_places, whole_part_length, whole_part_delimiter, decimal_delimiter)
	{
		if(decimal_places==null) decimal_places = 2;
		if(whole_part_length==null) whole_part_length = 3;
		if(whole_part_delimiter==null) whole_part_delimiter = ",";
		if(decimal_delimiter==null) decimal_delimiter = ".";

	    var re = '\\d(?=(\\d{' + (whole_part_length || 3) + '})+' + (decimal_places > 0 ? '\\D' : '$') + ')';
	    var num = number.toFixed(Math.max(0, ~~decimal_places));

	    if(decimal_delimiter)
	    	num = num.replace('.', decimal_delimiter);

	    var rx = global.formatCurrencyCache[re];
	    if(!rx)
	    	rx = global.formatCurrencyCache[re] = new RegExp(re, 'g')

	    return num.replace(rx, '$&' + (whole_part_delimiter || ','));
	};

	////////////////////////////////////////////////////////////////////////////////////////////////////
	global.parseServerConfig = function(s)
	{
		return JSON.parse(s);
	};

	////////////////////////////////////////////////////////////////////////////////////////////////////
	global.saveFile = function (fileName, data)
	{
		var blob = new Blob([data], { type: 'application/octet-binary' });
		var url = URL.createObjectURL(blob);
	    var a = document.body.appendChild(document.createElement("a"));
	    a.style = "display: none";
		a.href = url;
		a.download = fileName;
		a.click();
		window.URL.revokeObjectURL(url);
	};

	// ==================================================================================================================================
	//	    ____            ___   ____
	//	   / __ )____  _  _|__ \ / __ \
	//	  / __  / __ \| |/_/_/ // / / /
	//	 / /_/ / /_/ />  </ __// /_/ /
	//	/_____/\____/_/|_/____/_____/
	//
	// ==================================================================================================================================

	if (global.Module)
	{
		var b2_staticBody = 0;
		var b2_kinematicBody = 1;
		var b2_dynamicBody = 2;

		this['Box2D'] = Module;
		Module['b2_staticBody'] = 0;
		Module['b2_kinematicBody'] = 1;
		Module['b2_dynamicBody'] = 2;

		function importScripts()
		{
		}

		function createPolygonShape(vertices)
		{
			var shape = new b2PolygonShape();
			var buffer = allocate(vertices.length * 8, 'float', ALLOC_STACK);
			var offset = 0;
			for (var i = 0; i < vertices.length; i++)
			{
				setValue(buffer + (offset), vertices[i].get_x(), 'float'); // x
				setValue(buffer + (offset + 4), vertices[i].get_y(), 'float'); // y
				offset += 8;
			}
			var ptr_wrapped = wrapPointer(buffer, b2Vec2);
			shape.Set(ptr_wrapped, vertices.length);
			return shape;
		}
	}

	// ==================================================================================================================================
	//	    ______                __                __
	//	   / ____/___ _________  / /_  ____  ____  / /__
	//	  / /_  / __ `/ ___/ _ \/ __ \/ __ \/ __ \/ //_/
	//	 / __/ / /_/ / /__/  __/ /_/ / /_/ / /_/ / ,<
	//	/_/    \__,_/\___/\___/_.___/\____/\____/_/|_|
	//
	// ==================================================================================================================================

	////////////////////////////////////////////////////////////////////////////////////////////////////
	if (!global.__Facebook_Initialize) global.__Facebook_Initialize = function (a, b)
	{
		CocoFacebook.DebugMode = true;
		CocoFacebook.Init(294194444062993);
	};

	// ==================================================================================================================================
	//	    ______                       ____
	//	   / ____/___ _____  _______  __/ __ )____  _  __
	//	  / /_  / __ `/ __ \/ ___/ / / / __  / __ \| |/_/
	//	 / __/ / /_/ / / / / /__/ /_/ / /_/ / /_/ />  <
	//	/_/    \__,_/_/ /_/\___/\__, /_____/\____/_/|_|
	//	                       /____/
	// ==================================================================================================================================

	global.__close_window = function()
	{
		try
		{
			window.parent.jQuery.fancybox.close();
		}
		catch (e)
		{
		}
	}

	// ==================================================================================================================================
	//	    __  _______  ______
	//	   /  |/  / __ \/ ____/
	//	  / /|_/ / / / /___ \
	//	 / /  / / /_/ /___/ /
	//	/_/  /_/_____/_____/
	//
	// ==================================================================================================================================

    /*
    * Add integers, wrapping at 2^32. This uses 16-bit operations internally
    * to work around bugs in some JS interpreters.
    */
    function safe_add(x, y) {
        var lsw = (x & 0xFFFF) + (y & 0xFFFF),
            msw = (x >> 16) + (y >> 16) + (lsw >> 16);
        return (msw << 16) | (lsw & 0xFFFF);
    }

    /*
    * Bitwise rotate a 32-bit number to the left.
    */
    function bit_rol(num, cnt) {
        return (num << cnt) | (num >>> (32 - cnt));
    }

    /*
    * These functions implement the four basic operations the algorithm uses.
    */
    function md5_cmn(q, a, b, x, s, t) {
        return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);
    }
    function md5_ff(a, b, c, d, x, s, t) {
        return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);
    }
    function md5_gg(a, b, c, d, x, s, t) {
        return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);
    }
    function md5_hh(a, b, c, d, x, s, t) {
        return md5_cmn(b ^ c ^ d, a, b, x, s, t);
    }
    function md5_ii(a, b, c, d, x, s, t) {
        return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);
    }

    /*
    * Calculate the MD5 of an array of little-endian words, and a bit length.
    */
    function binl_md5(x, len) {
        /* append padding */
        x[len >> 5] |= 0x80 << (len % 32);
        x[(((len + 64) >>> 9) << 4) + 14] = len;

        var i, olda, oldb, oldc, oldd,
            a =  1732584193,
            b = -271733879,
            c = -1732584194,
            d =  271733878;

        for (i = 0; i < x.length; i += 16) {
            olda = a;
            oldb = b;
            oldc = c;
            oldd = d;

            a = md5_ff(a, b, c, d, x[i],       7, -680876936);
            d = md5_ff(d, a, b, c, x[i +  1], 12, -389564586);
            c = md5_ff(c, d, a, b, x[i +  2], 17,  606105819);
            b = md5_ff(b, c, d, a, x[i +  3], 22, -1044525330);
            a = md5_ff(a, b, c, d, x[i +  4],  7, -176418897);
            d = md5_ff(d, a, b, c, x[i +  5], 12,  1200080426);
            c = md5_ff(c, d, a, b, x[i +  6], 17, -1473231341);
            b = md5_ff(b, c, d, a, x[i +  7], 22, -45705983);
            a = md5_ff(a, b, c, d, x[i +  8],  7,  1770035416);
            d = md5_ff(d, a, b, c, x[i +  9], 12, -1958414417);
            c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);
            b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);
            a = md5_ff(a, b, c, d, x[i + 12],  7,  1804603682);
            d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);
            c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);
            b = md5_ff(b, c, d, a, x[i + 15], 22,  1236535329);

            a = md5_gg(a, b, c, d, x[i +  1],  5, -165796510);
            d = md5_gg(d, a, b, c, x[i +  6],  9, -1069501632);
            c = md5_gg(c, d, a, b, x[i + 11], 14,  643717713);
            b = md5_gg(b, c, d, a, x[i],      20, -373897302);
            a = md5_gg(a, b, c, d, x[i +  5],  5, -701558691);
            d = md5_gg(d, a, b, c, x[i + 10],  9,  38016083);
            c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);
            b = md5_gg(b, c, d, a, x[i +  4], 20, -405537848);
            a = md5_gg(a, b, c, d, x[i +  9],  5,  568446438);
            d = md5_gg(d, a, b, c, x[i + 14],  9, -1019803690);
            c = md5_gg(c, d, a, b, x[i +  3], 14, -187363961);
            b = md5_gg(b, c, d, a, x[i +  8], 20,  1163531501);
            a = md5_gg(a, b, c, d, x[i + 13],  5, -1444681467);
            d = md5_gg(d, a, b, c, x[i +  2],  9, -51403784);
            c = md5_gg(c, d, a, b, x[i +  7], 14,  1735328473);
            b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);

            a = md5_hh(a, b, c, d, x[i +  5],  4, -378558);
            d = md5_hh(d, a, b, c, x[i +  8], 11, -2022574463);
            c = md5_hh(c, d, a, b, x[i + 11], 16,  1839030562);
            b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);
            a = md5_hh(a, b, c, d, x[i +  1],  4, -1530992060);
            d = md5_hh(d, a, b, c, x[i +  4], 11,  1272893353);
            c = md5_hh(c, d, a, b, x[i +  7], 16, -155497632);
            b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);
            a = md5_hh(a, b, c, d, x[i + 13],  4,  681279174);
            d = md5_hh(d, a, b, c, x[i],      11, -358537222);
            c = md5_hh(c, d, a, b, x[i +  3], 16, -722521979);
            b = md5_hh(b, c, d, a, x[i +  6], 23,  76029189);
            a = md5_hh(a, b, c, d, x[i +  9],  4, -640364487);
            d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);
            c = md5_hh(c, d, a, b, x[i + 15], 16,  530742520);
            b = md5_hh(b, c, d, a, x[i +  2], 23, -995338651);

            a = md5_ii(a, b, c, d, x[i],       6, -198630844);
            d = md5_ii(d, a, b, c, x[i +  7], 10,  1126891415);
            c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);
            b = md5_ii(b, c, d, a, x[i +  5], 21, -57434055);
            a = md5_ii(a, b, c, d, x[i + 12],  6,  1700485571);
            d = md5_ii(d, a, b, c, x[i +  3], 10, -1894986606);
            c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);
            b = md5_ii(b, c, d, a, x[i +  1], 21, -2054922799);
            a = md5_ii(a, b, c, d, x[i +  8],  6,  1873313359);
            d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);
            c = md5_ii(c, d, a, b, x[i +  6], 15, -1560198380);
            b = md5_ii(b, c, d, a, x[i + 13], 21,  1309151649);
            a = md5_ii(a, b, c, d, x[i +  4],  6, -145523070);
            d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);
            c = md5_ii(c, d, a, b, x[i +  2], 15,  718787259);
            b = md5_ii(b, c, d, a, x[i +  9], 21, -343485551);

            a = safe_add(a, olda);
            b = safe_add(b, oldb);
            c = safe_add(c, oldc);
            d = safe_add(d, oldd);
        }
        return [a, b, c, d];
    }

    /*
    * Convert an array of little-endian words to a string
    */
    function binl2rstr(input) {
        var i,
            output = '';
        for (i = 0; i < input.length * 32; i += 8) {
            output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xFF);
        }
        return output;
    }

    /*
    * Convert a raw string to an array of little-endian words
    * Characters >255 have their high-byte silently ignored.
    */
    function rstr2binl(input) {
        var i,
            output = [];
        output[(input.length >> 2) - 1] = undefined;
        for (i = 0; i < output.length; i += 1) {
            output[i] = 0;
        }
        for (i = 0; i < input.length * 8; i += 8) {
            output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (i % 32);
        }
        return output;
    }

    /*
    * Calculate the MD5 of a raw string
    */
    function rstr_md5(s) {
        return binl2rstr(binl_md5(rstr2binl(s), s.length * 8));
    }

    /*
    * Calculate the HMAC-MD5, of a key and some data (raw strings)
    */
    function rstr_hmac_md5(key, data) {
        var i,
            bkey = rstr2binl(key),
            ipad = [],
            opad = [],
            hash;
        ipad[15] = opad[15] = undefined;
        if (bkey.length > 16) {
            bkey = binl_md5(bkey, key.length * 8);
        }
        for (i = 0; i < 16; i += 1) {
            ipad[i] = bkey[i] ^ 0x36363636;
            opad[i] = bkey[i] ^ 0x5C5C5C5C;
        }
        hash = binl_md5(ipad.concat(rstr2binl(data)), 512 + data.length * 8);
        return binl2rstr(binl_md5(opad.concat(hash), 512 + 128));
    }

    /*
    * Convert a raw string to a hex string
    */
    function rstr2hex(input) {
        var hex_tab = '0123456789abcdef',
            output = '',
            x,
            i;
        for (i = 0; i < input.length; i += 1) {
            x = input.charCodeAt(i);
            output += hex_tab.charAt((x >>> 4) & 0x0F) +
                hex_tab.charAt(x & 0x0F);
        }
        return output;
    }

    /*
    * Encode a string as utf-8
    */
    function str2rstr_utf8(input) {
        return unescape(encodeURIComponent(input));
    }

    /*
    * Take string arguments and return either raw or hex encoded strings
    */
    function raw_md5(s) {
        return rstr_md5(str2rstr_utf8(s));
    }
    function hex_md5(s) {
        return rstr2hex(raw_md5(s));
    }
    function raw_hmac_md5(k, d) {
        return rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d));
    }
    function hex_hmac_md5(k, d) {
        return rstr2hex(raw_hmac_md5(k, d));
    }

    global.md5 = function(string, key, raw)
    {
        if (!key)
        {
            if (!raw)
            {
                return hex_md5(string);
            }
            return raw_md5(string);
        }
        if (!raw)
        {
            return hex_hmac_md5(key, string);
        }
        return raw_hmac_md5(key, string);
    }

////////////////////////////////////////////////////////////////////////////////////////////////////
// Execute Polyfill

}(global));



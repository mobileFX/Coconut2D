/* ***** BEGIN LICENSE BLOCK *****
 *
 * Copyright (C) 2013-2017 www.mobilefx.com
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * ***** END LICENSE BLOCK ***** */

class HTMLVideoElement : HTMLElement
{
	public var __imageData:ImageData;

	private var __uid:Integer;
	private var __currentTime:Time;
	private var __width:Integer;
	private var __height:Integer;

	public var duration:Time;
	public var paused:Boolean;
	public var ended:Boolean;
	public var autoplay:Boolean;
	public var loop:Boolean;

	private var __src:String;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function Constructor()
	{
		__uid=0;
		__imageData = null;
		__currentTime=0;
		__width=0;
		__height=0;
		duration=0;
		paused=false;
		ended=false;
		autoplay=false;
		loop=false;
		__src="";
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function Destructor()
	{
		trace("Delete Video " + src);
		__Video_delete(__uid);
		delete __imageData;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public property src
	{
		function get():String
		{
			return __src;
		}

		function set(v:String)
		{
			__uid = __Video_load(v, this);
			if(__uid) __src = v;
		}
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	private function resize()
	{
		delete __imageData;
		__imageData = new ImageData(String(__width), String(__height));
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function play()
	{
		__Video_play(__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function pause()
	{
		__Video_pause(__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public property width
	{
		function get():Integer
		{
			return __width;
		}

		function set(v:Integer)
		{
			if(v == __width) return;
			__width = v;
			resize();
		}
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public property height
	{
		function get():Integer
		{
			return __height;
		}

		function set(v:Integer)
		{
			if(v == __height) return;
			__height = v;
			resize();
		}
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public property currentTime
	{
		function get():Time
		{
			return __Video_get_position(__uid);
		}

		function set(time:Time)
		{
			__Video_set_position(__uid, time);
		}
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public property readyState
	{
		function get():Integer
		{
			//return __Video_get_readystate(__uid);
			return 4;
		}
	}
}

/* ***** BEGIN LICENSE BLOCK *****
 *
 * Copyright (C) 2013-2017 www.mobilefx.com
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * ***** END LICENSE BLOCK ***** */

#pragma export_native;
#pragma export_web;

// ==================================================================================================================================
//	   ______                 __  _______   __            ____
//	  / ____/___  _________  / / / /  _/ | / /___ __   __/ __ )____ ______
//	 / /   / __ \/ ___/ __ \/ / / // //  |/ / __ `/ | / / __  / __ `/ ___/
//	/ /___/ /_/ / /__/ /_/ / /_/ // // /|  / /_/ /| |/ / /_/ / /_/ / /
//	\____/\____/\___/\____/\____/___/_/ |_/\__,_/ |___/_____/\__,_/_/
//
// ==================================================================================================================================

#include "CocoUIControl.jspp"

control class CocoUINavBar : CocoUIControl
{
	////////////////////////////////////////////////////////////////////////////////////////////////////
	// Caption
	////////////////////////////////////////////////////////////////////////////////////////////////////

	public var __caption:CocoUITextBlock;
	public property __captionFontSize				{ function get():Float	 					{ return __caption.fontSize; 					} 	function set(v:CartesianY)	 				{ __caption.fontSize = v; invalidate(); 			}}

	published property Caption						{ function get():String  					{ return __caption.text; 						} 	function set(v:String) 						{ __caption.text = v; invalidate(); 				}}
	published property CaptionAlign					{ function get():COCO_CONTROL_ANCHOR_ENUM 	{ return __caption.anchor; 						}	function set(v:COCO_CONTROL_ANCHOR_ENUM) 	{ __caption.anchor = v; invalidate(); 				}}
	published property CaptionFontName				{ function get():String 					{ return __caption.fontName; 					} 	function set(v:String) 						{ __caption.fontName = v; invalidate(); 			}}
	published property CaptionFontSize				{ function get():CartesianY	 				{ return AbsoluteY(__caption.fontSize); 		} 	function set(v:CartesianY)	 				{ __caption.fontSize = RelativeY(v); invalidate(); 	}}
	published property CaptionFontBold				{ function get():Boolean 					{ return __caption.fontBold; 					} 	function set(v:Boolean) 					{ __caption.fontBold = v; invalidate(); 			}}
	published property CaptionFontItalic			{ function get():Boolean 					{ return __caption.fontItalic; 					} 	function set(v:Boolean) 					{ __caption.fontItalic = v; invalidate(); 			}}
	published property CaptionFontUnderline			{ function get():Boolean 					{ return __caption.fontUnderline; 				} 	function set(v:Boolean) 					{ __caption.fontUnderline = v; invalidate(); 		}}
	published property CaptionFontShadowX			{ function get():Integer 					{ return __caption.fontShadowX;					} 	function set(v:Integer) 					{ __caption.fontShadowX = v; invalidate(); 			}}
	published property CaptionFontShadowY			{ function get():Integer 					{ return __caption.fontShadowY;					} 	function set(v:Integer) 					{ __caption.fontShadowY = v; invalidate(); 			}}
	published property CaptionFontBlur				{ function get():Integer 					{ return __caption.fontBlur;					} 	function set(v:Integer) 					{ __caption.fontBlur = v; invalidate(); 			}}
	published property CaptionFontColorSel			{ function get():Color   					{ return __caption.fontColorSel; 				} 	function set(v:Color) 						{ __caption.fontColorSel = v; invalidate(); 		}}
	published property CaptionFontShadowColorSel 	{ function get():Color	 					{ return __caption.fontShadowColorSel;			} 	function set(v:Color) 						{ __caption.fontShadowColorSel = v; invalidate(); 	}}
	published property CaptionFontColor				{ function get():Color   					{ return __caption.fontColor;					} 	function set(v:Color) 						{ __caption.fontColor = v; invalidate(); 			}}
	published property CaptionFontShadowColor 		{ function get():Color	 					{ return __caption.fontColorSel;				}	function set(v:Color) 						{ __caption.fontShadowColor = v; invalidate(); 		}}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function Constructor(scene:CocoScene, name:String) : CocoUIControl(scene, name)
	{
		__anchor = VIEW_ANCHOR_HEADER;

		// Initial Control Size
		__selectable = false;
		Width = engine.device.LogicalPixelsWidth;
		Height = COCO_DEFAULT_CONTROL_HEIGHT;
		SetMargins(0,0,0,0);
		SetPaddings(0,0,0,0);

		// Control Background Gradient
		__backgroundGradient = "0,0xFFB5BDC8,0.36,0xFF828C95,1,0xFF28343B";

		// Set default text block
		__caption = new CocoUITextBlock(this, Name, COCO_CONTROL_ANCHOR_ENUM.ANCHOR_CENTER);
		__caption.fontColor = 0xffffffff;
		__caption.fontBold = true;
		__caption.multiline = false;
		__caption.SetTextRect(PaddingLeft,PaddingTop,PaddingWidth,PaddingHeight);
		__texts.push(__caption);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public virtual function Defaults()
	{
		if(!__scene) return;
		Width = __scene.ViewWidth * __scene.ViewPixelRatio;
		Height = COCO_DEFAULT_CONTROL_HEIGHT * __scene.ViewPixelRatio;
		__caption.fontSize = RelativeY(COCO_DEFAULT_FONT_SIZE + 2);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public virtual function RefreshLayout(parent:CocoUIView)
	{
		__caption.SetTextRect(PaddingLeft,PaddingTop,PaddingWidth,PaddingHeight);
		super.RefreshLayout;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public virtual function Clone():CocoUINavBar
	{
		var ctl:CocoUINavBar = new CocoUINavBar(__scene, __instanceName);
		__cloneTo(ctl);
		return ctl;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public virtual function __cloneTo(ctl:CocoUINavBar)
	{
		__copy__(this, ctl, COPY_MEMBERS_ALL);
		super.__cloneTo(ctl);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function Destructor()
	{
		delete __caption;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public virtual function paint(ctx:ICocoRenderContext, scene:CocoScene, parentClip:CocoClip, calcBoundingBox:Boolean, level:Integer, index:Integer)
	{
		super.paint;
	}
}

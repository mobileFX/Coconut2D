#pragma export_web;
#pragma export_native;

/* ***** BEGIN LICENSE BLOCK *****
 *
 * Copyright (C) 2013-2017 www.mobilefx.com
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * ***** END LICENSE BLOCK ***** */

///////////////////////////////////////////////////////////////////////////////////////////////

// ==================================================================================================================================
//	   ______                 ______                 __
//	  / ____/___  _________  / ____/   _____  ____  / /_
//	 / /   / __ \/ ___/ __ \/ __/ | | / / _ \/ __ \/ __/
//	/ /___/ /_/ / /__/ /_/ / /___ | |/ /  __/ / / / /_
//	\____/\____/\___/\____/_____/ |___/\___/_/ /_/\__/
//
// ==================================================================================================================================

// This is the base class for all Coconut2D events declared in classes.

class CocoEvent
{
	public var type:String;
	public var bubbles:Boolean;
	public var cancelable:Boolean;
	public var timeStamp:Integer;
	public var stopPropagation:Boolean;
	public var defaultPrevented:Boolean;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function Constructor(type:String, cancelable:Boolean, bubbles:Boolean)
	{
		timeStamp = 0;
		stopPropagation = false;
		defaultPrevented = false;

		reset();

		this.type = type;
		this.cancelable = cancelable;
		this.bubbles = bubbles;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public virtual function reset()
	{
		timeStamp 			= 0;
		stopPropagation 	= false;
		defaultPrevented 	= false;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function Destructor()
	{
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function is(Event:CocoEvent):Boolean
	{
		return Event.type==type;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function cancelBubble()
	{
		stopPropagation = true;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function preventDefault()
	{
		defaultPrevented = true;
	}
}

/* ***** BEGIN LICENSE BLOCK *****
 *
 * Copyright (C) 2013-2017 www.mobilefx.com
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * ***** END LICENSE BLOCK ***** */

#pragma export_native;
#pragma export_web;

#include "CocoClip.jspp"

class CocoVideo : CocoSelfTexturedClip
{
	private var video:HTMLVideoElement;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function Constructor(scene:CocoScene, name:String) : CocoSelfTexturedClip(scene, name)
	{
		video = null;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function Destructor()
	{
		if(video)
		{
			video.pause();
			delete video;
			video=null;
		}
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	published property src
	{
		function get():String { return video.src; }
		function set(url:String)
		{
			if(!video)
				video = HTMLVideoElement(document.createElement("video"));

			video.src = url;
			video.play();
		}
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public virtual function paint(ctx:ICocoRenderContext, scene:CocoScene, parentClip:CocoClip, calcBoundingBox:Boolean, level:Integer, index:Integer)
	{
		if(video)
		{
			var w:Integer = AbsoluteX(__width);
			var h:Integer = AbsoluteX(__height);
			if(video.width != w) video.width = w;
			if(video.height != h) video.height = h;
			__image = ctx.prepareVideoFrame(__image, video);
		}
		super.paint;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function play()
	{
		if(!video) return;
		video.play();
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function pause()
	{
		if(!video) return;
		video.pause();
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function stop()
	{
		if(!video) return;
		video.pause();
		setCurrentTime(0);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function duration(): Float
	{
		return video ? video.duration : 0;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function ended(): Boolean
	{
		return video ? video.ended : true;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function getCurrentTime(): Float
	{
		return video ? video.currentTime : 0;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function setCurrentTime(t: Float)
	{
		if(video && video.readyState==4)
			video.currentTime = t;
	}
}
